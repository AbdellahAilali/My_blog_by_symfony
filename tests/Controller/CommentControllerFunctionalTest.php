<?php
/**
 * Created by PhpStorm.
 * User: abdellah
 * Date: 19/07/18
 * Time: 17:01
 */

namespace Test\Controller;

use App\Entity\Comment;
use App\Entity\User;
use Doctrine\Common\Persistence\PersistentObject;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Mapping\ClassMetadata;
use PHPUnit\Util\Json;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use Symfony\Component\BrowserKit;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;

class CommentControllerFunctionalTest extends WebTestCase
{
    protected function setUp()
    {
        /** @var PersistentObject persist,flush */

        static::createClient();

        $em = self::$kernel->getContainer()->get('doctrine.orm.entity_manager');

        $this->createDb($em);

        $loader = new \Nelmio\Alice\Loader\NativeLoader();
        $objectSet = $loader->loadFile(__DIR__ . '/../Fixtures/fixtures.yml')->getObjects();

        foreach ($objectSet as $object) {
            $em->persist($object);
        }

        $em->flush();
        $em->clear();

        parent::setUp(); // TODO: Change the autogenerated stub
    }


    public function testCreateCommentAction()
    {
        /**@var Comment $comment**/
        $em = self::$kernel->getContainer()->get('doctrine.orm.entity_manager');

        $client = self::$kernel->getContainer()->get('test.client');

        $client->request("POST", "/comment", array(), array(), array(), '{"id":"efbea4d6-2ebc-48b0-8c74-7cc3e0bdac44","title":"la decouvert du continent ameriquain","description":"par dessus les collines et les riviere","user_id":"ab0de897-c33d-4a1f-aaf6-6e5513c17639"}', true);

        $this->assertSame(200, $client->getResponse()->getStatusCode());

        $comment = $em->getRepository(Comment::class)->find("efbea4d6-2ebc-48b0-8c74-7cc3e0bdac44");

        $this->assertEquals("la decouvert du continent ameriquain", $comment->getTitle());
        $this->assertEquals("par dessus les collines et les riviere", $comment->getDescription());
        $this->assertEquals("ab0de897-c33d-4a1f-aaf6-6e5513c17639", $comment->getUser()->getId());

    }


    public function testModifyCommentAction()

    {
        /**@var Comment $comment * */
       /**@var User $user * */

        $em = self::$kernel->getContainer()->get('doctrine.orm.entity_manager');

        $client = self::$kernel->getContainer()->get('test.client');

        $client->request("PUT", "/modify_comment/efbea4d6-2ebc-48b0-8c74-7cc3e0bdac23", array(), array(), array(), '{"id":"efbea4d6-2ebc-48b0-8c74-7cc3e0bdac23","title":"roots","description":"les decouvertes africaine dans le temps","user_id":"ab0de897-c33d-4a1f-aaf6-6e5513c17639"}', true);

        $this->assertSame(200, $client->getResponse()->getStatusCode());

        $comment = $em->getRepository(Comment::class)->findOneBy(["id" => "efbea4d6-2ebc-48b0-8c74-7cc3e0bdac23"]);

        $this->assertEquals("roots", $comment->getTitle());
        $this->assertEquals("les decouvertes africaine dans le temps", $comment->getDescription());
        $this->assertEquals("ab0de897-c33d-4a1f-aaf6-6e5513c17639", $comment->getUser()->getId());

    }

    public function testDeleteCommentAction()
    {
        $client = self::$kernel->getContainer()->get('test.client');

        $client->request("DELETE", "/delete_comment/efbea4d6-2ebc-48b0-8c74-7cc3e0bdac23");

        $this->assertSame(200, $client->getResponse()->getStatusCode());

    }


    private function createDb(EntityManager $em)
    {
        $tool = new \Doctrine\ORM\Tools\SchemaTool($em);
        $classes = [];
        /** @var ClassMetadata $class */

        foreach ($em->getMetadataFactory()->getAllMetadata() as $class) {
            $classes[] = $class;
        }

        $tool->dropSchema($classes);
        $tool->createSchema($classes);
    }
}